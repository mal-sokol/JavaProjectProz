package proz.utils;

import proz.database.daos.*;
import proz.database.models.*;
import proz.utils.exceptions.*;
import proz.database.utils.DbManager;

public class PrepareTestDataBase
{
    public static void insertTestData() throws ApplicationException
    {
        DbManager.initDatabase();
        CategoryDao categoryDao = new CategoryDao();
        AnswerDao answerDao = new AnswerDao();
        QuestionDao questionDao = new QuestionDao();
        ResultDao resultDao = new ResultDao();
        TestDao testDao = new TestDao();
        UserDao userDao = new UserDao();

        User user = new User();
        user.setTeacher(true);
        user.setPassword("pass");
        user.setUsername("Ann");
        userDao.createOrUpdate(user);

        User user1 = new User();
        user1.setTeacher(false);
        user1.setPassword("pass");
        user1.setUsername("Tommy");
        userDao.createOrUpdate(user1);

        Category c1 = new Category();
        c1.setName("Geography");
        categoryDao.createOrUpdate(c1);
        Test t1 = new Test();
        Test t2 = new Test();
        t1.setName("The greatest");
        t2.setName("Capital cities");
        t1.setCategoryId(c1);
        t2.setCategoryId(c1);
        testDao.createOrUpdate(t1);
        testDao.createOrUpdate(t2);
        Question q1 = new Question();
        Question q2 = new Question();
        Question q3 = new Question();
        Question q4 = new Question();
        Question q5 = new Question();
        Question q6 = new Question();
        Question q7= new Question();
        Question q8 = new Question();
        Question q9 = new Question();
        Question q10 = new Question();
        Question q11 = new Question();
        Question q12 = new Question();

        q1.setQuestion("Which river is the longest?");
        q2.setQuestion("Which lake is the deepest?");
        q3.setQuestion("Which mountain is the highest?");
        q4.setQuestion("Which desert is the largest?");
        q5.setQuestion("Which building is the highest?");
        q6.setQuestion("Which lake is the biggest by area?");
        q1.setTestId(t1);
        q2.setTestId(t1);
        q3.setTestId(t1);
        q4.setTestId(t1);
        q5.setTestId(t1);
        q6.setTestId(t1);
        questionDao.createOrUpdate(q1);
        questionDao.createOrUpdate(q2);
        questionDao.createOrUpdate(q3);
        questionDao.createOrUpdate(q4);
        questionDao.createOrUpdate(q5);
        questionDao.createOrUpdate(q6);

        Answer a1 = new Answer();
        Answer a2 = new Answer();
        Answer a3 = new Answer();
        Answer a4 = new Answer();
        a1.setAnswer("Nile");
        a2.setAnswer("Amazon");
        a3.setAnswer("Mississippi");
        a4.setAnswer("Yellow river");
        a1.setCorrect(true);
        a2.setCorrect(false);
        a3.setCorrect(false);
        a4.setCorrect(false);
        a1.setQuestionId(q1);
        a2.setQuestionId(q1);
        a3.setQuestionId(q1);
        a4.setQuestionId(q1);
        answerDao.createOrUpdate(a1);
        answerDao.createOrUpdate(a2);
        answerDao.createOrUpdate(a3);
        answerDao.createOrUpdate(a4);
        Answer b1 = new Answer();
        Answer b2 = new Answer();
        Answer b3 = new Answer();
        Answer b4 = new Answer();
        b1.setCorrect(true);
        b2.setCorrect(false);
        b3.setCorrect(false);
        b4.setCorrect(false);
        b1.setQuestionId(q2);
        b2.setQuestionId(q2);
        b3.setQuestionId(q2);
        b4.setQuestionId(q2);
        b1.setAnswer("Baikal");
        b2.setAnswer("Crater lake");
        b3.setAnswer("Tanganyika");
        b4.setAnswer("Caspian Sea");
        answerDao.createOrUpdate(b1);
        answerDao.createOrUpdate(b2);
        answerDao.createOrUpdate(b3);
        answerDao.createOrUpdate(b4);

        Answer c5 = new Answer();
        Answer c2 = new Answer();
        Answer c3 = new Answer();
        Answer c4 = new Answer();
        c5.setCorrect(true);
        c2.setCorrect(false);
        c3.setCorrect(false);
        c4.setCorrect(false);
        c5.setQuestionId(q3);
        c2.setQuestionId(q3);
        c3.setQuestionId(q3);
        c4.setQuestionId(q3);
        c5.setAnswer("Mount Everest");
        c2.setAnswer("K2");
        c3.setAnswer("Kangchenjunga");
        c4.setAnswer("Makalu");
        answerDao.createOrUpdate(c5);
        answerDao.createOrUpdate(c2);
        answerDao.createOrUpdate(c3);
        answerDao.createOrUpdate(c4);

        Answer d1 = new Answer();
        Answer d2 = new Answer();
        Answer d3 = new Answer();
        Answer d4 = new Answer();
        d1.setCorrect(true);
        d2.setCorrect(false);
        d3.setCorrect(false);
        d4.setCorrect(false);
        d1.setQuestionId(q4);
        d2.setQuestionId(q4);
        d3.setQuestionId(q4);
        d4.setQuestionId(q4);
        d1.setAnswer("Antarctic");
        d2.setAnswer("Sahara");
        d3.setAnswer("Arabian");
        d4.setAnswer("Gobi");
        answerDao.createOrUpdate(d1);
        answerDao.createOrUpdate(d2);
        answerDao.createOrUpdate(d3);
        answerDao.createOrUpdate(d4);

        Answer e1 = new Answer();
        Answer e2 = new Answer();
        Answer e3 = new Answer();
        Answer e4 = new Answer();
        e1.setCorrect(true);
        e2.setCorrect(false);
        e3.setCorrect(false);
        e4.setCorrect(false);
        e1.setQuestionId(q5);
        e2.setQuestionId(q5);
        e3.setQuestionId(q5);
        e4.setQuestionId(q5);
        e1.setAnswer("Burj Khalifa");
        e2.setAnswer("Shanghai Tower");
        e3.setAnswer("Abraj Al-Bait Clock Tower");
        e4.setAnswer("Lotte World Tower");
        answerDao.createOrUpdate(e1);
        answerDao.createOrUpdate(e2);
        answerDao.createOrUpdate(e3);
        answerDao.createOrUpdate(e4);

        Answer f1 = new Answer();
        Answer f2 = new Answer();
        Answer f3 = new Answer();
        Answer f4 = new Answer();
        f1.setCorrect(true);
        f2.setCorrect(false);
        f3.setCorrect(false);
        f4.setCorrect(false);
        f1.setQuestionId(q6);
        f2.setQuestionId(q6);
        f3.setQuestionId(q6);
        f4.setQuestionId(q6);
        f1.setAnswer("Caspian Sea");
        f2.setAnswer("Superior");
        f3.setAnswer("Victoria");
        f4.setAnswer("Huron");
        answerDao.createOrUpdate(f1);
        answerDao.createOrUpdate(f2);
        answerDao.createOrUpdate(f3);
        answerDao.createOrUpdate(f4);

        q7.setTestId(t2);
        q8.setTestId(t2);
        q9.setTestId(t2);
        q10.setTestId(t2);
        q11.setTestId(t2);
        q12.setTestId(t2);
        q7.setQuestion("Capital city of Germany is");
        q8.setQuestion("Capital city of Czech Republic is");
        q9.setQuestion("Capital city of Austria is");
        q10.setQuestion("Capital city of Romania is");
        q11.setQuestion("Capital city of Moldova is");
        q12.setQuestion("Capital city of Cambodia is");
        questionDao.createOrUpdate(q7);
        questionDao.createOrUpdate(q8);
        questionDao.createOrUpdate(q9);
        questionDao.createOrUpdate(q10);
        questionDao.createOrUpdate(q11);
        questionDao.createOrUpdate(q12);

        Answer g1 = new Answer();
        Answer g2 = new Answer();
        Answer g3 = new Answer();
        Answer g4 = new Answer();
        g1.setCorrect(true);
        g2.setCorrect(false);
        g3.setCorrect(false);
        g4.setCorrect(false);
        g1.setQuestionId(q7);
        g2.setQuestionId(q7);
        g3.setQuestionId(q7);
        g4.setQuestionId(q7);
        g1.setAnswer("Berlin");
        g2.setAnswer("London");
        g3.setAnswer("Warsaw");
        g4.setAnswer("Paris");
        answerDao.createOrUpdate(g1);
        answerDao.createOrUpdate(g2);
        answerDao.createOrUpdate(g3);
        answerDao.createOrUpdate(g4);

        Answer h1 = new Answer();
        Answer h2 = new Answer();
        Answer h3 = new Answer();
        Answer h4 = new Answer();
        h1.setCorrect(true);
        h2.setCorrect(false);
        h3.setCorrect(false);
        h4.setCorrect(false);
        h1.setQuestionId(q8);
        h2.setQuestionId(q8);
        h3.setQuestionId(q8);
        h4.setQuestionId(q8);
        h1.setAnswer("Prague");
        h2.setAnswer("Berlin");
        h3.setAnswer("Athens");
        h4.setAnswer("Budapest");
        answerDao.createOrUpdate(h1);
        answerDao.createOrUpdate(h2);
        answerDao.createOrUpdate(h3);
        answerDao.createOrUpdate(h4);

        Answer i1 = new Answer();
        Answer i2 = new Answer();
        Answer i3 = new Answer();
        Answer i4 = new Answer();
        i1.setCorrect(true);
        i2.setCorrect(false);
        i3.setCorrect(false);
        i4.setCorrect(false);
        i1.setQuestionId(q9);
        i2.setQuestionId(q9);
        i3.setQuestionId(q9);
        i4.setQuestionId(q9);
        i1.setAnswer("Vienna");
        i2.setAnswer("Bucharest");
        i3.setAnswer("Innsbruck");
        i4.setAnswer("Berlin");
        answerDao.createOrUpdate(i1);
        answerDao.createOrUpdate(i2);
        answerDao.createOrUpdate(i3);
        answerDao.createOrUpdate(i4);

        Answer j1 = new Answer();
        Answer j2 = new Answer();
        Answer j3 = new Answer();
        Answer j4 = new Answer();
        j1.setCorrect(true);
        j2.setCorrect(false);
        j3.setCorrect(false);
        j4.setCorrect(false);
        j1.setQuestionId(q10);
        j2.setQuestionId(q10);
        j3.setQuestionId(q10);
        j4.setQuestionId(q10);
        j1.setAnswer("Bucharest");
        j2.setAnswer("Budapest");
        j3.setAnswer("Bratislava");
        j4.setAnswer("Prague");
        answerDao.createOrUpdate(j1);
        answerDao.createOrUpdate(j2);
        answerDao.createOrUpdate(j3);
        answerDao.createOrUpdate(j4);

        Answer k1 = new Answer();
        Answer k2 = new Answer();
        Answer k3 = new Answer();
        Answer k4 = new Answer();
        k1.setCorrect(true);
        k2.setCorrect(false);
        k3.setCorrect(false);
        k4.setCorrect(false);
        k1.setQuestionId(q11);
        k2.setQuestionId(q11);
        k3.setQuestionId(q11);
        k4.setQuestionId(q11);
        k1.setAnswer("Chisinau");
        k2.setAnswer("Minsk");
        k3.setAnswer("Pristina");
        k4.setAnswer("Skopje");
        answerDao.createOrUpdate(k1);
        answerDao.createOrUpdate(k2);
        answerDao.createOrUpdate(k3);
        answerDao.createOrUpdate(k4);

        Answer l1 = new Answer();
        Answer l2 = new Answer();
        Answer l3 = new Answer();
        Answer l4 = new Answer();
        l1.setCorrect(true);
        l2.setCorrect(false);
        l3.setCorrect(false);
        l4.setCorrect(false);
        l1.setQuestionId(q12);
        l2.setQuestionId(q12);
        l3.setQuestionId(q12);
        l4.setQuestionId(q12);
        l1.setAnswer("Phnom Penh");
        l2.setAnswer("Astana");
        l3.setAnswer("Baku");
        l4.setAnswer("Bishkek");
        answerDao.createOrUpdate(l1);
        answerDao.createOrUpdate(l2);
        answerDao.createOrUpdate(l3);
        answerDao.createOrUpdate(l4);

    }
}

